name: CMake

on: 
  push:
    tags: 
      - v* 

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest] # add to it ubuntu-latest, windows-latest
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Get latest CMake
      uses: lukka/get-cmake@latest

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE
    - name: collect the distribution files
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --install .
    - name: Compress binary
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: tar -zcvf llvm12_${{ matrix.os }}.tar.gz dist
    - name: Create Artifact
      uses: actions/upload-artifact@v2
      with: 
        name: llvm12_${{ matrix.os }}
        path: ${{runner.workspace}}/build/llvm12_${{ matrix.os }}.tar.gz
  create_prerelease:
    needs: [build]
    if: success()
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest] # add to it ubuntu-latest, windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: llvm12_${{ matrix.os }}
        path: ${{runner.workspace}}
    - name: prerelease binaries
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{runner.workspace}}/llvm12_${{ matrix.os }}.tar.gz
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#     - name: Test
#       working-directory: ${{runner.workspace}}/build
#       shell: bash
#       # Execute tests defined by the CMake configuration.  
#       # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#       run: ctest -C $BUILD_TYPE
